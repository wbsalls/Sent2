mu_mci <- mu_mci_raw[!duplicated(val_df), ]
# most duplicates have 0 MCI_L1C
#* fix chron
mu_mci$samp_localTime <- chron(dates. = substr(mu_mci$samp_localTime, 2, 9),
times. = substr(mu_mci$samp_localTime, 11, 18))
mu_mci$img_localTime <- chron(dates. = substr(mu_mci$img_localTime, 2, 9),
times. = substr(mu_mci$img_localTime, 11, 18))
mu_mci$offset_hrs <- as.numeric(mu_mci$samp_localTime - mu_mci$img_localTime) * 24
# for plotting color
mu_mci$offset_days_factor <- as.factor(mu_mci$offset_days)
length(levels(mu_mci$offset_days_factor))
jcolors <- data.frame(day = levels(mu_mci$offset_days_factor),
color = I(topo.colors(11, alpha = 0.5)))
#
## calc chl a from MCI  ---------------
slope.mci <- 0.0004 # from Binding et al. 2013 - Erie
intercept.mci <- -0.0021 # from Binding et al. 2013 - Erie
mu_mci$chla_s2 <- (mu_mci$MCI_L1C - intercept.mci) / slope.mci
mu_mci <- mu_mci[mu_mci$chla_s2 > 0, ] # remove calculated negatives -617 (depends on coefficients used)
mu_mci$residual_chla <- abs(mu_mci$chla_s2 - mu_mci$chla_corr) # residual
mu_mci$pct_error_chla <- (abs(mu_mci$chla_s2 - mu_mci$chla_corr) / mu_mci$chla_corr) * 100 # % error
## subset ---------------
# remove land-adjacent
#mu_mci <- mu_mci[mu_mci$dist_shore_m >= 30, ]
# remove NAs
sum(is.na(mu_mci$MCI_L1C))
mu_mci <- mu_mci[!is.na(mu_mci$MCI_L1C), ]
# remove 0s (NA MCI_L1C)
sum(mu_mci$MCI_L1C == 0)
mu_mci <- mu_mci[mu_mci$MCI_L1C != 0, ]
# remove outliers
max(mu_mci$MCI_L1C)
mu_mci <- mu_mci[mu_mci$MCI_L1C != max(mu_mci$MCI_L1C), ]
min(mu_mci$MCI_L1C)
sum(mu_mci$MCI_L1C < -0.01)
mu_mci <- mu_mci[mu_mci$MCI_L1C > -0.01, ]
sum(mu_mci$chla_corr > 200)
mu_mci <- mu_mci[mu_mci$chla_corr < 200, ]
# subset by offset time
mu_mci <- mu_mci_preoffset
offset_min <- 0
offset_max <- 3
offset_threshold <- offset_min:offset_max
mu_mci <- mu_mci[mu_mci$offset_days %in% offset_threshold, ]
#mu_mci_raw <- mu_mci
mu_mci_raw <- read.csv("O:/PRIV/NERL_ORD_CYAN/Sentinel2/Validation/682_imgs/validation_S2_682imgs_MCI_L1C_2018-08-24.csv", stringsAsFactors = FALSE)
#mu_mci_raw <- read.csv("/Users/wilsonsalls/Desktop/EPA/Sentinel2/Validation/682_imgs/validation_S2_682imgs_MCI_L1C_2018-08-24.csv", stringsAsFactors = FALSE)
# remove duplicates: identify based on duplicated chlorophyll-a and MCI (L1C)
val_df <- data.frame(mu_mci_raw$chla_corr, mu_mci_raw$MCI_L1C, mu_mci_raw$LatitudeMeasure, mu_mci_raw$LongitudeMeasure)
sum(duplicated(val_df))
val_df_dups <- val_df[duplicated(val_df), ]
mu_mci <- mu_mci_raw[!duplicated(val_df), ]
# most duplicates have 0 MCI_L1C
#* fix chron
mu_mci$samp_localTime <- chron(dates. = substr(mu_mci$samp_localTime, 2, 9),
times. = substr(mu_mci$samp_localTime, 11, 18))
mu_mci$img_localTime <- chron(dates. = substr(mu_mci$img_localTime, 2, 9),
times. = substr(mu_mci$img_localTime, 11, 18))
mu_mci$offset_hrs <- as.numeric(mu_mci$samp_localTime - mu_mci$img_localTime) * 24
# for plotting color
mu_mci$offset_days_factor <- as.factor(mu_mci$offset_days)
length(levels(mu_mci$offset_days_factor))
jcolors <- data.frame(day = levels(mu_mci$offset_days_factor),
color = I(topo.colors(11, alpha = 0.5)))
#
## calc chl a from MCI  ---------------
slope.mci <- 0.0004 # from Binding et al. 2013 - Erie
intercept.mci <- -0.0021 # from Binding et al. 2013 - Erie
mu_mci$chla_s2 <- (mu_mci$MCI_L1C - intercept.mci) / slope.mci
mu_mci <- mu_mci[mu_mci$chla_s2 > 0, ] # remove calculated negatives -617 (depends on coefficients used)
mu_mci$residual_chla <- abs(mu_mci$chla_s2 - mu_mci$chla_corr) # residual
mu_mci$pct_error_chla <- (abs(mu_mci$chla_s2 - mu_mci$chla_corr) / mu_mci$chla_corr) * 100 # % error
## subset ---------------
# remove land-adjacent
#mu_mci <- mu_mci[mu_mci$dist_shore_m >= 30, ]
# remove NAs
sum(is.na(mu_mci$MCI_L1C))
mu_mci <- mu_mci[!is.na(mu_mci$MCI_L1C), ]
# remove 0s (NA MCI_L1C)
sum(mu_mci$MCI_L1C == 0)
mu_mci <- mu_mci[mu_mci$MCI_L1C != 0, ]
# remove outliers
max(mu_mci$MCI_L1C)
mu_mci <- mu_mci[mu_mci$MCI_L1C != max(mu_mci$MCI_L1C), ]
min(mu_mci$MCI_L1C)
sum(mu_mci$MCI_L1C < -0.01)
mu_mci <- mu_mci[mu_mci$MCI_L1C > -0.01, ]
sum(mu_mci$chla_corr > 200)
mu_mci <- mu_mci[mu_mci$chla_corr < 200, ]
mu_mci_preoffset <- mu_mci
# subset by offset time
mu_mci <- mu_mci_preoffset
offset_min <- 0
offset_max <- 3
offset_threshold <- offset_min:offset_max
mu_mci <- mu_mci[mu_mci$offset_days %in% offset_threshold, ]
# subset by method
mu_mci <- mu_mci[mu_mci$ResultAnalyticalMethod.MethodIdentifierContext == "APHA", ]
# b & w
col_plot <- alpha("black", 0.3)
pch_plot <- 20
plot_error_metrics(x = mu_mci$chla_corr, y = mu_mci$chla_s2, # export 800 x 860
xname = "in situ chlorophyll-a (ug/l)",
yname = "S2-derived chlorophyll-a (from MCI L1C)",
#title = sprintf("+/- %sday", offset_min),
title = sprintf("+/- %s-%s days", offset_min, offset_max),
#title = sprintf("+/- %s-%s-day validation of Sentinel-2-derived chlorophyll-a\n(coefficients from Binding et al. [2013], Lake Erie)", offset_min, offset_max),
equal_axes = TRUE,
log_axes = "xy",
plot_abline = FALSE,
rsq = FALSE,
states = mu_mci$state,
lakes = mu_mci$comid,
col = col_plot, pch = pch_plot,
xlim = c(0.05, 200),
ylim = c(0.05, 200),
xaxt="n",
yaxt="n") # col = alpha("black", 0.3), pch = 20
axis(1, at = c(10^(-1:3)), labels = c(10^(-1:3)))
axis(2, at = c(10^(-1:3)), labels = c(10^(-1:3)))
mu_mci <- mu_mci_preoffset
offset_min <- 0
offset_max <- 3
offset_threshold <- offset_min:offset_max
mu_mci <- mu_mci[mu_mci$offset_days %in% offset_threshold, ]
# b & w
col_plot <- alpha("black", 0.3)
pch_plot <- 20
plot_error_metrics(x = mu_mci$chla_corr, y = mu_mci$chla_s2, # export 800 x 860
xname = "in situ chlorophyll-a (ug/l)",
yname = "S2-derived chlorophyll-a (from MCI L1C)",
#title = sprintf("+/- %sday", offset_min),
title = sprintf("+/- %s-%s days", offset_min, offset_max),
#title = sprintf("+/- %s-%s-day validation of Sentinel-2-derived chlorophyll-a\n(coefficients from Binding et al. [2013], Lake Erie)", offset_min, offset_max),
equal_axes = TRUE,
log_axes = "xy",
plot_abline = FALSE,
rsq = FALSE,
states = mu_mci$state,
lakes = mu_mci$comid,
col = col_plot, pch = pch_plot,
xlim = c(0.05, 200),
ylim = c(0.05, 200),
xaxt="n",
yaxt="n") # col = alpha("black", 0.3), pch = 20
axis(1, at = c(10^(-1:3)), labels = c(10^(-1:3)))
axis(2, at = c(10^(-1:3)), labels = c(10^(-1:3)))
unique(mu_mci$ResultAnalyticalMethod.MethodIdentifierContext)
# subset by offset time
mu_mci <- mu_mci_preoffset
offset_min <- 0
offset_max <- 3
offset_threshold <- offset_min:offset_max
mu_mci <- mu_mci[mu_mci$offset_days %in% offset_threshold, ]
# subset by method
mu_mci <- mu_mci[which(mu_mci$ResultAnalyticalMethod.MethodIdentifierContext == "USGS"), ]
### plot  ---------------
# b & w
col_plot <- alpha("black", 0.3)
pch_plot <- 20
plot_error_metrics(x = mu_mci$chla_corr, y = mu_mci$chla_s2, # export 800 x 860
xname = "in situ chlorophyll-a (ug/l)",
yname = "S2-derived chlorophyll-a (from MCI L1C)",
#title = sprintf("+/- %sday", offset_min),
title = sprintf("+/- %s-%s days", offset_min, offset_max),
#title = sprintf("+/- %s-%s-day validation of Sentinel-2-derived chlorophyll-a\n(coefficients from Binding et al. [2013], Lake Erie)", offset_min, offset_max),
equal_axes = TRUE,
log_axes = "xy",
plot_abline = FALSE,
rsq = FALSE,
states = mu_mci$state,
lakes = mu_mci$comid,
col = col_plot, pch = pch_plot,
xlim = c(0.05, 200),
ylim = c(0.05, 200),
xaxt="n",
yaxt="n") # col = alpha("black", 0.3), pch = 20
axis(1, at = c(10^(-1:3)), labels = c(10^(-1:3)))
axis(2, at = c(10^(-1:3)), labels = c(10^(-1:3)))
unique(mu_mci$ResultAnalyticalMethod.MethodIdentifierContext)
# subset by offset time
mu_mci <- mu_mci_preoffset
offset_min <- 0
offset_max <- 3
offset_threshold <- offset_min:offset_max
mu_mci <- mu_mci[mu_mci$offset_days %in% offset_threshold, ]
# subset by method
mu_mci <- mu_mci[which(mu_mci$ResultAnalyticalMethod.MethodIdentifierContext == "APHA"), ]
### plot  ---------------
# b & w
col_plot <- alpha("black", 0.3)
pch_plot <- 20
plot_error_metrics(x = mu_mci$chla_corr, y = mu_mci$chla_s2, # export 800 x 860
xname = "in situ chlorophyll-a (ug/l)",
yname = "S2-derived chlorophyll-a (from MCI L1C)",
#title = sprintf("+/- %sday", offset_min),
title = sprintf("+/- %s-%s days", offset_min, offset_max),
#title = sprintf("+/- %s-%s-day validation of Sentinel-2-derived chlorophyll-a\n(coefficients from Binding et al. [2013], Lake Erie)", offset_min, offset_max),
equal_axes = TRUE,
log_axes = "xy",
plot_abline = FALSE,
rsq = FALSE,
states = mu_mci$state,
lakes = mu_mci$comid,
col = col_plot, pch = pch_plot,
xlim = c(0.05, 200),
ylim = c(0.05, 200),
xaxt="n",
yaxt="n") # col = alpha("black", 0.3), pch = 20
axis(1, at = c(10^(-1:3)), labels = c(10^(-1:3)))
axis(2, at = c(10^(-1:3)), labels = c(10^(-1:3)))
# subset by offset time
mu_mci <- mu_mci_preoffset
offset_min <- 0
offset_max <- 10
offset_threshold <- offset_min:offset_max
mu_mci <- mu_mci[mu_mci$offset_days %in% offset_threshold, ]
# subset by method
mu_mci <- mu_mci[which(mu_mci$ResultAnalyticalMethod.MethodIdentifierContext == "USEPA"), ]
### plot  ---------------
# b & w
col_plot <- alpha("black", 0.3)
pch_plot <- 20
plot_error_metrics(x = mu_mci$chla_corr, y = mu_mci$chla_s2, # export 800 x 860
xname = "in situ chlorophyll-a (ug/l)",
yname = "S2-derived chlorophyll-a (from MCI L1C)",
#title = sprintf("+/- %sday", offset_min),
title = sprintf("+/- %s-%s days", offset_min, offset_max),
#title = sprintf("+/- %s-%s-day validation of Sentinel-2-derived chlorophyll-a\n(coefficients from Binding et al. [2013], Lake Erie)", offset_min, offset_max),
equal_axes = TRUE,
log_axes = "xy",
plot_abline = FALSE,
rsq = FALSE,
states = mu_mci$state,
lakes = mu_mci$comid,
col = col_plot, pch = pch_plot,
xlim = c(0.05, 200),
ylim = c(0.05, 200),
xaxt="n",
yaxt="n") # col = alpha("black", 0.3), pch = 20
axis(1, at = c(10^(-1:3)), labels = c(10^(-1:3)))
axis(2, at = c(10^(-1:3)), labels = c(10^(-1:3)))
length(unique(mu_mci$PRODUCT_ID))
# subset by offset time
mu_mci <- mu_mci_preoffset
length(unique(mu_mci$PRODUCT_ID))
length(unique(mu_mci$system.index))
length(unique(mu_mci_raw$system.index))
#mu_mci_raw <- mu_mci
mu_mci_raw <- read.csv("O:/PRIV/NERL_ORD_CYAN/Sentinel2/Validation/682_imgs/validation_S2_682imgs_MCI_L1C_2018-08-24.csv", stringsAsFactors = FALSE)
# remove duplicates: identify based on duplicated chlorophyll-a and MCI (L1C)
val_df <- data.frame(mu_mci_raw$chla_corr, mu_mci_raw$MCI_L1C, mu_mci_raw$LatitudeMeasure, mu_mci_raw$LongitudeMeasure)
sum(duplicated(val_df))
val_df_dups <- val_df[duplicated(val_df), ]
mu_mci <- mu_mci_raw[!duplicated(val_df), ]
#mu_mci_raw <- mu_mci
mu_mci_raw <- read.csv("O:/PRIV/NERL_ORD_CYAN/Sentinel2/Validation/682_imgs/validation_S2_682imgs_MCI_L1C_2018-08-24.csv", stringsAsFactors = FALSE)
#mu_mci_raw <- read.csv("/Users/wilsonsalls/Desktop/EPA/Sentinel2/Validation/682_imgs/validation_S2_682imgs_MCI_L1C_2018-08-24.csv", stringsAsFactors = FALSE)
# remove duplicates: identify based on duplicated chlorophyll-a and MCI (L1C)
val_df <- data.frame(mu_mci_raw$chla_corr, mu_mci_raw$MCI_L1C, mu_mci_raw$LatitudeMeasure, mu_mci_raw$LongitudeMeasure)
sum(duplicated(val_df))
val_df_dups <- val_df[duplicated(val_df), ]
mu_mci <- mu_mci_raw[!duplicated(val_df), ]
length(unique(mu_mci_raw$system.index))
# subset by offset time
mu_mci <- mu_mci_preoffset
offset_min <- 0
offset_max <- 10
offset_threshold <- offset_min:offset_max
mu_mci <- mu_mci[mu_mci$offset_days %in% offset_threshold, ]
# subset by method
mu_mci <- mu_mci[which(mu_mci$ResultAnalyticalMethod.MethodIdentifierContext == "USEPA"), ]
library(chron)
library(colorRamps)
library(grDevices)
library(RColorBrewer)
source("C:/Users/WSalls/Desktop/Git/Sent2/error_metrics_1800611.R")
#source("/Users/wilsonsalls/Desktop/Git/Sent2/error_metrics_1800611.R")
#mu_mci_raw <- mu_mci
mu_mci_raw <- read.csv("O:/PRIV/NERL_ORD_CYAN/Sentinel2/Validation/682_imgs/validation_S2_682imgs_MCI_L1C_2018-08-24.csv", stringsAsFactors = FALSE)
#mu_mci_raw <- read.csv("/Users/wilsonsalls/Desktop/EPA/Sentinel2/Validation/682_imgs/validation_S2_682imgs_MCI_L1C_2018-08-24.csv", stringsAsFactors = FALSE)
# remove duplicates: identify based on duplicated chlorophyll-a and MCI (L1C)
val_df <- data.frame(mu_mci_raw$chla_corr, mu_mci_raw$MCI_L1C, mu_mci_raw$LatitudeMeasure, mu_mci_raw$LongitudeMeasure)
sum(duplicated(val_df))
val_df_dups <- val_df[duplicated(val_df), ]
mu_mci <- mu_mci_raw[!duplicated(val_df), ]
# most duplicates have 0 MCI_L1C
#* fix chron
mu_mci$samp_localTime <- chron(dates. = substr(mu_mci$samp_localTime, 2, 9),
times. = substr(mu_mci$samp_localTime, 11, 18))
mu_mci$img_localTime <- chron(dates. = substr(mu_mci$img_localTime, 2, 9),
times. = substr(mu_mci$img_localTime, 11, 18))
mu_mci$offset_hrs <- as.numeric(mu_mci$samp_localTime - mu_mci$img_localTime) * 24
# for plotting color
mu_mci$offset_days_factor <- as.factor(mu_mci$offset_days)
length(levels(mu_mci$offset_days_factor))
jcolors <- data.frame(day = levels(mu_mci$offset_days_factor),
color = I(topo.colors(11, alpha = 0.5)))
#
## calc chl a from MCI  ---------------
slope.mci <- 0.0004 # from Binding et al. 2013 - Erie
intercept.mci <- -0.0021 # from Binding et al. 2013 - Erie
mu_mci$chla_s2 <- (mu_mci$MCI_L1C - intercept.mci) / slope.mci
mu_mci <- mu_mci[mu_mci$chla_s2 > 0, ] # remove calculated negatives -617 (depends on coefficients used)
mu_mci$residual_chla <- abs(mu_mci$chla_s2 - mu_mci$chla_corr) # residual
mu_mci$pct_error_chla <- (abs(mu_mci$chla_s2 - mu_mci$chla_corr) / mu_mci$chla_corr) * 100 # % error
## subset ---------------
# remove land-adjacent
#mu_mci <- mu_mci[mu_mci$dist_shore_m >= 30, ]
# remove NAs
sum(is.na(mu_mci$MCI_L1C))
mu_mci <- mu_mci[!is.na(mu_mci$MCI_L1C), ]
# remove 0s (NA MCI_L1C)
sum(mu_mci$MCI_L1C == 0)
mu_mci <- mu_mci[mu_mci$MCI_L1C != 0, ]
# remove outliers
max(mu_mci$MCI_L1C)
mu_mci <- mu_mci[mu_mci$MCI_L1C != max(mu_mci$MCI_L1C), ]
min(mu_mci$MCI_L1C)
sum(mu_mci$MCI_L1C < -0.01)
mu_mci <- mu_mci[mu_mci$MCI_L1C > -0.01, ]
sum(mu_mci$chla_corr > 200)
mu_mci <- mu_mci[mu_mci$chla_corr < 200, ]
table(mu_mci$ResultAnalyticalMethod.MethodIdentifierContext)
sum(is.na(mu_mci$ResultAnalyticalMethod.MethodIdentifierContext))
# export final validation data set
write.csv(mu_mci, sprintf("O:/PRIV/NERL_ORD_CYAN/Sentinel2/Validation/682_imgs/validation_S2_682imgs_MCI_Chla_%s.csv", Sys.Date()))
head(mu_mci$samp_localTime)
head(mu_mci$offset_hrs)
25 % 24
25 %$ 24
25 %% 24
26 %% 24
## check time of day
mu_mci$offset_hrs_day <- mu_mci$offset_hrs %% 24
plot(mu_mci$offset_hrs_day, mu_mci$residual_chla)
## check time of day
mu_mci$offset_hrs_day <- (mu_mci$offset_hrs + 12) %% 24
plot(mu_mci$offset_hrs_day, mu_mci$residual_chla)
## check time of day
mu_mci$offset_hrs_day <- (mu_mci$offset_hrs + 11) %% 24
plot(mu_mci$offset_hrs_day, mu_mci$residual_chla)
## check time of day
mu_mci$offset_hrs_day <- (mu_mci$offset_hrs + 12) %% 24
plot(mu_mci$offset_hrs_day, mu_mci$residual_chla)
plot(mu_mci$offset_hrs_day, mu_mci$residual_chla, xlim = c(0,24))
mu_mci$offset_hrs_day <- (mu_mci$offset_hrs) %% 24
plot(mu_mci$offset_hrs_day, mu_mci$residual_chla, xlim = c(0,24))
## check time of day
mu_mci$offset_hrs_day <- (mu_mci$offset_hrs + 12) %% 24
#mu_mci$offset_hrs_day <- (mu_mci$offset_hrs) %% 24
plot(mu_mci$offset_hrs_day, mu_mci$residual_chla, xlim = c(0,24))
## check time of day
mu_mci$offset_hrs_day <- (mu_mci$offset_hrs + 12) %% 24 - 12
## check time of day
mu_mci$offset_hrs_day <- (mu_mci$offset_hrs + 12) %% 24 - 12
plot(mu_mci$offset_hrs_day, mu_mci$residual_chla, xlim = c(-12, 12))
qmod <- lm(mu_mci$residual_chla ~ mu_mci$offset_hrs_day + mu_mci$offset_hrs_day2)
qmod <- lm(mu_mci$residual_chla ~ mu_mci$offset_hrs_day + (mu_mci$offset_hrs_day ^ 2))
summary(qmod)
hrs2 <- mu_mci$offset_hrs_day ^ 2
qmod <- lm(mu_mci$residual_chla ~ mu_mci$offset_hrs_day + hrs2)
summary(qmod)
?predict
hrs <- mu_mci$offset_hrs_day
hrs2 <- mu_mci$offset_hrs_day ^ 2
qmod <- lm(mu_mci$residual_chla ~ hrs + hrs2)
timevalues <- seq(-12, 12, 0.1)
timevalues <- seq(-12, 12, 0.1)
predictedcounts <- predict(qmod, list(hrs=timevalues, hrs2=timevalues^2))
lines(timevalues, predictedcounts, col = "darkgreen", lwd = 3)
mu_mci_hrs <- mu_mci[which(abs(mu_mci$offset_hrs_day) > 10), ]
## check time of day
mu_mci$offset_hrs_day <- (mu_mci$offset_hrs + 12) %% 24 - 12
mu_mci_hrs <- mu_mci[which(abs(mu_mci$offset_hrs_day) > 10), ]
hrs <- mu_mci_hrs$offset_hrs_day
hrs2 <- mu_mci_hrs$offset_hrs_day ^ 2
qmod <- lm(mu_mci_hrs$residual_chla ~ hrs + hrs2)
timevalues <- seq(-12, 12, 0.1)
predictedcounts <- predict(qmod, list(hrs=timevalues, hrs2=timevalues^2))
plot(mu_mci$offset_hrs_day, mu_mci$residual_chla, xlim = c(-12, 12))
lines(timevalues, predictedcounts, col = "darkgreen", lwd = 3)
mu_mci$offset_hrs_day <- (mu_mci$offset_hrs + 12) %% 24 - 12
mu_mci_hrs <- mu_mci[which(abs(mu_mci$offset_hrs_day) < 10), ]
hrs <- mu_mci_hrs$offset_hrs_day
hrs2 <- mu_mci_hrs$offset_hrs_day ^ 2
qmod <- lm(mu_mci_hrs$residual_chla ~ hrs + hrs2)
timevalues <- seq(-12, 12, 0.1)
predictedcounts <- predict(qmod, list(hrs=timevalues, hrs2=timevalues^2))
plot(mu_mci$offset_hrs_day, mu_mci$residual_chla, xlim = c(-12, 12))
lines(timevalues, predictedcounts, col = "darkgreen", lwd = 3)
mu_mci_hrs <- mu_mci
mu_mci$offset_hrs_day <- (mu_mci$offset_hrs + 12) %% 24 - 12
mu_mci_hrs <- mu_mci[which(abs(mu_mci$offset_hrs_day) < 10), ]
mu_mci_hrs <- mu_mci
hrs <- mu_mci_hrs$offset_hrs_day
hrs2 <- mu_mci_hrs$offset_hrs_day ^ 2
qmod <- lm(mu_mci_hrs$residual_chla ~ hrs + hrs2)
summary(qmod)
timevalues <- seq(-12, 12, 0.1)
predictedcounts <- predict(qmod, list(hrs=timevalues, hrs2=timevalues^2))
plot(mu_mci_hrs$offset_hrs_day, mu_mci_hrs$residual_chla, xlim = c(-12, 12))
lines(timevalues, predictedcounts, col = "darkgreen", lwd = 3)
mu_mci$offset_hrs_day <- (mu_mci$offset_hrs + 12) %% 24 - 12
mu_mci_hrs <- mu_mci[which(abs(mu_mci$offset_hrs_day) < 10), ]
#mu_mci_hrs <- mu_mci
hrs <- mu_mci_hrs$offset_hrs_day
hrs2 <- mu_mci_hrs$offset_hrs_day ^ 2
qmod <- lm(mu_mci_hrs$residual_chla ~ hrs + hrs2)
summary(qmod)
timevalues <- seq(-12, 12, 0.1)
predictedcounts <- predict(qmod, list(hrs=timevalues, hrs2=timevalues^2))
plot(mu_mci_hrs$offset_hrs_day, mu_mci_hrs$residual_chla, xlim = c(-12, 12))
lines(timevalues, predictedcounts, col = "darkgreen", lwd = 3)
mean(mu_mci_hrs$residual_chla)
abline(16, 0)
median(mu_mci_hrs$residual_chla)
?cut
seq?
?seq
seq(-12, 12, 0.5)
# boxplots
mu_mci$offset_hrs_day_interval <- cut(mu_mci$offset_hrs_day, seq(-12, 12, 0.5))
table(mu_mci$offset_hrs_day_interval)
hist(mu_mci$offset_hrs_day_interval)
hist(table(mu_mci$offset_hrs_day_interval))
barplot(table(mu_mci$offset_hrs_day_interval))
?boxplot
# boxplots
mu_mci$offset_hrs_day_interval <- cut(mu_mci$offset_hrs_day, seq(-12, 12, 0.5))
boxplot(residual_chla ~ offset_hrs_day_interval, data = mu_mci,
ylab = "chl a residual",
xlab = "Offset Hours")
colnames(mu_mci)
mu_mci$img_localTime[1:50,]
mu_mci$img_localTime[1:50]
mu_mci$dist_shore_m
hist(mu_mci$dist_shore_m)
max(mu_mci$dist_shore_m)
## check shore dist *****
plot(mu_mci$dist_shore_m, mu_mci$residual_chla,
#xlim = c(0, 500), # try removing this too
#ylim = c(0, 200),
xlab = "distance from Shore (m)",
ylab = "chl a error (ug/L)",
pch = 20,
col = alpha("black", alpha = 0.4))
# boxplot
mu_mci$dist_shore_m_interval <- cut(mu_mci$dist_shore_m, seq(0, 12, 10000))
# boxplot
mu_mci$dist_shore_m_interval <- cut(mu_mci$dist_shore_m, seq(0, 10000, 100))
boxplot(residual_chla ~ offset_hrs_day_interval, data = mu_mci,
xlab = "distance from shore (m)",
ylab = "chl a residual")
# boxplot
mu_mci$dist_shore_m_interval <- cut(mu_mci$dist_shore_m, seq(0, 10000, 100))
boxplot(residual_chla ~ dist_shore_m_interval, data = mu_mci,
xlab = "distance from shore (m)",
ylab = "chl a residual")
# boxplot
mu_mci$dist_shore_m_interval <- cut(mu_mci$dist_shore_m, seq(0, 2000, 100))
boxplot(residual_chla ~ dist_shore_m_interval, data = mu_mci,
xlab = "distance from shore (m)",
ylab = "chl a residual")
barplot(table(mu_mci$offset_hrs_day_interval))
barplot(table(mu_mci$dist_shore_m_interval))
boxplot(residual_chla ~ dist_shore_m_interval, data = mu_mci,
xlab = "distance from shore (m)",
ylab = "chl a residual")
plot(1,1)
# boxplot
mu_mci$offset_hrs_day_interval <- cut(mu_mci$offset_hrs_day, seq(-12, 12, 0.5))
barplot(table(mu_mci$offset_hrs_day_interval), xlab = "offset hour of day", ylab = "frequency")
boxplot(residual_chla ~ offset_hrs_day_interval, data = mu_mci,
xlab = "offset hour of day",
ylab = "chl a residual")
# boxplot
mu_mci$dist_shore_m_interval <- cut(mu_mci$dist_shore_m, seq(0, 2000, 100))
barplot(table(mu_mci$dist_shore_m_interval), xlab = "distance from shore (m)", ylab = "frequency")
boxplot(residual_chla ~ dist_shore_m_interval, data = mu_mci,
xlab = "distance from shore (m)",
ylab = "chl a residual")
table(mu_mci$dist_shore_m_interval)
# boxplot
mu_mci$dist_shore_m_interval <- cut(mu_mci$dist_shore_m, seq(0, 2000, 50))
barplot(table(mu_mci$dist_shore_m_interval), xlab = "distance from shore (m)", ylab = "frequency")
boxplot(residual_chla ~ dist_shore_m_interval, data = mu_mci,
xlab = "distance from shore (m)",
ylab = "chl a residual")
default(par(mfrow))
par(mfrow)
par()
par()$mfrow
par(mfrow = c(2,1))
# boxplot
mu_mci$offset_hrs_day_interval <- cut(mu_mci$offset_hrs_day, seq(-12, 12, 0.5))
barplot(table(mu_mci$offset_hrs_day_interval), xlab = "offset hour of day", ylab = "frequency")
boxplot(residual_chla ~ offset_hrs_day_interval, data = mu_mci,
xlab = "offset hour of day",
ylab = "chl a residual")
# boxplot
mu_mci$dist_shore_m_interval <- cut(mu_mci$dist_shore_m, seq(0, 2000, 50))
barplot(table(mu_mci$dist_shore_m_interval), xlab = "distance from shore (m)", ylab = "frequency")
boxplot(residual_chla ~ dist_shore_m_interval, data = mu_mci,
xlab = "distance from shore (m)",
ylab = "chl a residual")
# boxplot
mu_mci$dist_shore_m_interval <- cut(mu_mci$dist_shore_m, seq(0, 10000, 50))
barplot(table(mu_mci$dist_shore_m_interval), xlab = "distance from shore (m)", ylab = "frequency")
boxplot(residual_chla ~ dist_shore_m_interval, data = mu_mci,
xlab = "distance from shore (m)",
ylab = "chl a residual")
